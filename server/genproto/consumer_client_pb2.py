# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: consumer_client.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import base_pb2 as base__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='consumer_client.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x15\x63onsumer_client.proto\x1a\nbase.proto\"-\n\x0e\x42\x61lanceRequest\x12\x1b\n\x08\x63ustomer\x18\x01 \x01(\x0b\x32\t.Customer\"-\n\x08\x42\x61lances\x12!\n\x08\x62\x61lances\x18\x01 \x03(\x0b\x32\x0f.AccountBalance\"K\n\x17\x45nrollInBusinessRequest\x12\x1b\n\x08\x63ustomer\x18\x01 \x01(\x0b\x32\t.Customer\x12\x13\n\x0b\x62usiness_id\x18\x02 \x01(\x05\"+\n\x18\x45nrollInBusinessResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x32\x88\x01\n\x0e\x43ustomerServer\x12+\n\x0bGetBalances\x12\x0f.BalanceRequest\x1a\t.Balances\"\x00\x12I\n\x10\x45nrollInBusiness\x12\x18.EnrollInBusinessRequest\x1a\x19.EnrollInBusinessResponse\"\x00\x42\x1c\n\x1a\x63om.loyaltysystem.customerb\x06proto3')
  ,
  dependencies=[base__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_BALANCEREQUEST = _descriptor.Descriptor(
  name='BalanceRequest',
  full_name='BalanceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='customer', full_name='BalanceRequest.customer', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=37,
  serialized_end=82,
)


_BALANCES = _descriptor.Descriptor(
  name='Balances',
  full_name='Balances',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='balances', full_name='Balances.balances', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=84,
  serialized_end=129,
)


_ENROLLINBUSINESSREQUEST = _descriptor.Descriptor(
  name='EnrollInBusinessRequest',
  full_name='EnrollInBusinessRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='customer', full_name='EnrollInBusinessRequest.customer', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='business_id', full_name='EnrollInBusinessRequest.business_id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=131,
  serialized_end=206,
)


_ENROLLINBUSINESSRESPONSE = _descriptor.Descriptor(
  name='EnrollInBusinessResponse',
  full_name='EnrollInBusinessResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='EnrollInBusinessResponse.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=208,
  serialized_end=251,
)

_BALANCEREQUEST.fields_by_name['customer'].message_type = base__pb2._CUSTOMER
_BALANCES.fields_by_name['balances'].message_type = base__pb2._ACCOUNTBALANCE
_ENROLLINBUSINESSREQUEST.fields_by_name['customer'].message_type = base__pb2._CUSTOMER
DESCRIPTOR.message_types_by_name['BalanceRequest'] = _BALANCEREQUEST
DESCRIPTOR.message_types_by_name['Balances'] = _BALANCES
DESCRIPTOR.message_types_by_name['EnrollInBusinessRequest'] = _ENROLLINBUSINESSREQUEST
DESCRIPTOR.message_types_by_name['EnrollInBusinessResponse'] = _ENROLLINBUSINESSRESPONSE

BalanceRequest = _reflection.GeneratedProtocolMessageType('BalanceRequest', (_message.Message,), dict(
  DESCRIPTOR = _BALANCEREQUEST,
  __module__ = 'consumer_client_pb2'
  # @@protoc_insertion_point(class_scope:BalanceRequest)
  ))
_sym_db.RegisterMessage(BalanceRequest)

Balances = _reflection.GeneratedProtocolMessageType('Balances', (_message.Message,), dict(
  DESCRIPTOR = _BALANCES,
  __module__ = 'consumer_client_pb2'
  # @@protoc_insertion_point(class_scope:Balances)
  ))
_sym_db.RegisterMessage(Balances)

EnrollInBusinessRequest = _reflection.GeneratedProtocolMessageType('EnrollInBusinessRequest', (_message.Message,), dict(
  DESCRIPTOR = _ENROLLINBUSINESSREQUEST,
  __module__ = 'consumer_client_pb2'
  # @@protoc_insertion_point(class_scope:EnrollInBusinessRequest)
  ))
_sym_db.RegisterMessage(EnrollInBusinessRequest)

EnrollInBusinessResponse = _reflection.GeneratedProtocolMessageType('EnrollInBusinessResponse', (_message.Message,), dict(
  DESCRIPTOR = _ENROLLINBUSINESSRESPONSE,
  __module__ = 'consumer_client_pb2'
  # @@protoc_insertion_point(class_scope:EnrollInBusinessResponse)
  ))
_sym_db.RegisterMessage(EnrollInBusinessResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\032com.loyaltysystem.customer'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class CustomerServerStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetBalances = channel.unary_unary(
        '/CustomerServer/GetBalances',
        request_serializer=BalanceRequest.SerializeToString,
        response_deserializer=Balances.FromString,
        )
    self.EnrollInBusiness = channel.unary_unary(
        '/CustomerServer/EnrollInBusiness',
        request_serializer=EnrollInBusinessRequest.SerializeToString,
        response_deserializer=EnrollInBusinessResponse.FromString,
        )


class CustomerServerServicer(object):

  def GetBalances(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EnrollInBusiness(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CustomerServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetBalances': grpc.unary_unary_rpc_method_handler(
          servicer.GetBalances,
          request_deserializer=BalanceRequest.FromString,
          response_serializer=Balances.SerializeToString,
      ),
      'EnrollInBusiness': grpc.unary_unary_rpc_method_handler(
          servicer.EnrollInBusiness,
          request_deserializer=EnrollInBusinessRequest.FromString,
          response_serializer=EnrollInBusinessResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'CustomerServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaCustomerServerServicer(object):
  def GetBalances(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def EnrollInBusiness(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaCustomerServerStub(object):
  def GetBalances(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  GetBalances.future = None
  def EnrollInBusiness(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  EnrollInBusiness.future = None


def beta_create_CustomerServer_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('CustomerServer', 'EnrollInBusiness'): EnrollInBusinessRequest.FromString,
    ('CustomerServer', 'GetBalances'): BalanceRequest.FromString,
  }
  response_serializers = {
    ('CustomerServer', 'EnrollInBusiness'): EnrollInBusinessResponse.SerializeToString,
    ('CustomerServer', 'GetBalances'): Balances.SerializeToString,
  }
  method_implementations = {
    ('CustomerServer', 'EnrollInBusiness'): face_utilities.unary_unary_inline(servicer.EnrollInBusiness),
    ('CustomerServer', 'GetBalances'): face_utilities.unary_unary_inline(servicer.GetBalances),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_CustomerServer_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('CustomerServer', 'EnrollInBusiness'): EnrollInBusinessRequest.SerializeToString,
    ('CustomerServer', 'GetBalances'): BalanceRequest.SerializeToString,
  }
  response_deserializers = {
    ('CustomerServer', 'EnrollInBusiness'): EnrollInBusinessResponse.FromString,
    ('CustomerServer', 'GetBalances'): Balances.FromString,
  }
  cardinalities = {
    'EnrollInBusiness': cardinality.Cardinality.UNARY_UNARY,
    'GetBalances': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'CustomerServer', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
