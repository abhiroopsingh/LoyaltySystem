# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pos_client.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import base_pb2 as base__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='pos_client.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x10pos_client.proto\x1a\nbase.proto\"P\n\x0e\x41\x63\x63rualRequest\x12\x13\n\x0b\x63ustomer_id\x18\x01 \x01(\x03\x12\x13\n\x0b\x62usiness_id\x18\x02 \x01(\x03\x12\x14\n\x0cpoint_amount\x18\x03 \x01(\x05\"\"\n\x0f\x41\x63\x63rualResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\"H\n\x11RedemptionRequest\x12\x1b\n\x08\x63ustomer\x18\x01 \x01(\x0b\x32\t.Customer\x12\x16\n\x0eopportunity_id\x18\x02 \x01(\x05\"6\n\x12RedemptionResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t2q\n\x0bPointOfSale\x12\x33\n\x06Redeem\x12\x12.RedemptionRequest\x1a\x13.RedemptionResponse\"\x00\x12-\n\x06\x41\x63\x63rue\x12\x0f.AccrualRequest\x1a\x10.AccrualResponse\"\x00\x42\x1f\n\x1d\x63om.loyaltysystem.pointofsaleb\x06proto3')
  ,
  dependencies=[base__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_ACCRUALREQUEST = _descriptor.Descriptor(
  name='AccrualRequest',
  full_name='AccrualRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='customer_id', full_name='AccrualRequest.customer_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='business_id', full_name='AccrualRequest.business_id', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='point_amount', full_name='AccrualRequest.point_amount', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=32,
  serialized_end=112,
)


_ACCRUALRESPONSE = _descriptor.Descriptor(
  name='AccrualResponse',
  full_name='AccrualResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='AccrualResponse.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=114,
  serialized_end=148,
)


_REDEMPTIONREQUEST = _descriptor.Descriptor(
  name='RedemptionRequest',
  full_name='RedemptionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='customer', full_name='RedemptionRequest.customer', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='opportunity_id', full_name='RedemptionRequest.opportunity_id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=150,
  serialized_end=222,
)


_REDEMPTIONRESPONSE = _descriptor.Descriptor(
  name='RedemptionResponse',
  full_name='RedemptionResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='RedemptionResponse.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='RedemptionResponse.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=224,
  serialized_end=278,
)

_REDEMPTIONREQUEST.fields_by_name['customer'].message_type = base__pb2._CUSTOMER
DESCRIPTOR.message_types_by_name['AccrualRequest'] = _ACCRUALREQUEST
DESCRIPTOR.message_types_by_name['AccrualResponse'] = _ACCRUALRESPONSE
DESCRIPTOR.message_types_by_name['RedemptionRequest'] = _REDEMPTIONREQUEST
DESCRIPTOR.message_types_by_name['RedemptionResponse'] = _REDEMPTIONRESPONSE

AccrualRequest = _reflection.GeneratedProtocolMessageType('AccrualRequest', (_message.Message,), dict(
  DESCRIPTOR = _ACCRUALREQUEST,
  __module__ = 'pos_client_pb2'
  # @@protoc_insertion_point(class_scope:AccrualRequest)
  ))
_sym_db.RegisterMessage(AccrualRequest)

AccrualResponse = _reflection.GeneratedProtocolMessageType('AccrualResponse', (_message.Message,), dict(
  DESCRIPTOR = _ACCRUALRESPONSE,
  __module__ = 'pos_client_pb2'
  # @@protoc_insertion_point(class_scope:AccrualResponse)
  ))
_sym_db.RegisterMessage(AccrualResponse)

RedemptionRequest = _reflection.GeneratedProtocolMessageType('RedemptionRequest', (_message.Message,), dict(
  DESCRIPTOR = _REDEMPTIONREQUEST,
  __module__ = 'pos_client_pb2'
  # @@protoc_insertion_point(class_scope:RedemptionRequest)
  ))
_sym_db.RegisterMessage(RedemptionRequest)

RedemptionResponse = _reflection.GeneratedProtocolMessageType('RedemptionResponse', (_message.Message,), dict(
  DESCRIPTOR = _REDEMPTIONRESPONSE,
  __module__ = 'pos_client_pb2'
  # @@protoc_insertion_point(class_scope:RedemptionResponse)
  ))
_sym_db.RegisterMessage(RedemptionResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\035com.loyaltysystem.pointofsale'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class PointOfSaleStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Redeem = channel.unary_unary(
        '/PointOfSale/Redeem',
        request_serializer=RedemptionRequest.SerializeToString,
        response_deserializer=RedemptionResponse.FromString,
        )
    self.Accrue = channel.unary_unary(
        '/PointOfSale/Accrue',
        request_serializer=AccrualRequest.SerializeToString,
        response_deserializer=AccrualResponse.FromString,
        )


class PointOfSaleServicer(object):

  def Redeem(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Accrue(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PointOfSaleServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Redeem': grpc.unary_unary_rpc_method_handler(
          servicer.Redeem,
          request_deserializer=RedemptionRequest.FromString,
          response_serializer=RedemptionResponse.SerializeToString,
      ),
      'Accrue': grpc.unary_unary_rpc_method_handler(
          servicer.Accrue,
          request_deserializer=AccrualRequest.FromString,
          response_serializer=AccrualResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'PointOfSale', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaPointOfSaleServicer(object):
  def Redeem(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Accrue(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaPointOfSaleStub(object):
  def Redeem(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Redeem.future = None
  def Accrue(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Accrue.future = None


def beta_create_PointOfSale_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('PointOfSale', 'Accrue'): AccrualRequest.FromString,
    ('PointOfSale', 'Redeem'): RedemptionRequest.FromString,
  }
  response_serializers = {
    ('PointOfSale', 'Accrue'): AccrualResponse.SerializeToString,
    ('PointOfSale', 'Redeem'): RedemptionResponse.SerializeToString,
  }
  method_implementations = {
    ('PointOfSale', 'Accrue'): face_utilities.unary_unary_inline(servicer.Accrue),
    ('PointOfSale', 'Redeem'): face_utilities.unary_unary_inline(servicer.Redeem),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_PointOfSale_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('PointOfSale', 'Accrue'): AccrualRequest.SerializeToString,
    ('PointOfSale', 'Redeem'): RedemptionRequest.SerializeToString,
  }
  response_deserializers = {
    ('PointOfSale', 'Accrue'): AccrualResponse.FromString,
    ('PointOfSale', 'Redeem'): RedemptionResponse.FromString,
  }
  cardinalities = {
    'Accrue': cardinality.Cardinality.UNARY_UNARY,
    'Redeem': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'PointOfSale', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
